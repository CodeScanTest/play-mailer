version: ~> 1.0

language: scala

scala:
  - 2.12.13
  - 2.13.5

git:
  depth: false # Avoid sbt-dynver not seeing the tag

env:
  - TRAVIS_JDK=8
  - TRAVIS_JDK=11


before_install:
  - |
    curl -Ls https://git.io/sbt -o sbt || travis_terminate 1
    chmod 0755 sbt || travis_terminate 1
    sudo mv sbt /usr/local/bin/sbt || travis_terminate 1
  - curl --version # for debug purpose
  - if [ ! -f ~/.jabba/jabba.sh ]; then curl -L -v --retry 5 -o jabba-install.sh https://git.io/jabba && bash jabba-install.sh; fi
  - . ~/.jabba/jabba.sh
install: jabba install $(jabba ls-remote "adopt@~1.$TRAVIS_JDK.0-0" --latest=patch) && jabba use "$_" && java -Xmx32m -version

script:
   - sbt ++$TRAVIS_SCALA_VERSION test mimaReportBinaryIssues
   # Test sample applications
   - sbt ++$TRAVIS_SCALA_VERSION publishLocal "print play-mailer/version" | tee /tmp/out.txt
   - export PLAY_MAILER_VERSION=`tail -1 /tmp/out`
   - pushd samples/compile-timeDI/ && sbt ++$TRAVIS_SCALA_VERSION test && popd
   - pushd samples/runtimeDI/ && sbt ++$TRAVIS_SCALA_VERSION test && popd

jobs:
  include:
    - stage: deploy
      name: "Publish artifacts to Bintray"
      script: sbt +publish
      scala: 2.13.8
      env:
      - TRAVIS_JDK=11
        # encrypt with: travis encrypt --pro BINTRAY_USER=...
      - secure: "AsUH32Opr8jA4cHsfG7g0ESqEE0Vn5EjbsvxiFkEeeUdTy0DpVGLuCdJ3qEH7cdY0VCMFxEjN+JqP2ehlylN7esth2VFPO1MatWhHmZfOuo1bv0yyuk0h0tlH8LNmEZnM+v18XLqlYKHHVjgEDsia5if8jxhuFeYJvgrfPk77ZE="
        # encrypt with: travis encrypt --pro BINTRAY_PASS=...
      - secure: "W7qZ1gjrJ4jcrXLLeoan9bgLnWQry7wXy1uhWohS1Jo2kZQ5Wy9SAicWXGm6ZWCVSNesjshjKDaiTmrOmC0i97M2dVtGtgbB+v80z7kJqY6ZspmvEleYxPZO7JWWthrSy+VOYffsiKUAZxNAydbbvEMIoB55sSC2GhAeN1uCijQ="

stages:
  - name: test
  - name: deploy
    if: ((branch = main AND type = push) OR (tag IS present)) AND NOT fork

cache:
  directories:
    - $HOME/.cache/coursier
    - $HOME/.ivy2/cache
    - $HOME/.jabba
    - $HOME/.sbt

before_cache:
  - find $HOME/.ivy2 -name "ivydata-*.properties" -delete
  - find $HOME/.sbt -name "*.lock" -delete
